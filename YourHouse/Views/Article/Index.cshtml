@using System.Text.Json

@{
    ViewData["Title"] = "Bài đăng";
    var citys = ViewData["City"] as List<YourHouse.Application.DTOs.CityDto>;
    var districts = ViewData["District"] as List<YourHouse.Application.DTOs.DistrictDto>;
}

<div class="container">
    <div class="row">
        <div class="col-2">
            <div class="row">
                <div class="accordion" >
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                Danh mục
                            </button>
                        </h2>
                    </div>
                </div>
                <div class="form-check d-flex align-items-center">
                    <input class="form-check-input" type="radio" name="TypeArticle" id="All" checked>
                    <label class="form-check-label d-block flex-grow-1 pt-2 pb-2 ms-2" for="All">
                        Tất cả
                    </label>
                </div>
                <hr class="mt-0 mb-0" />
                <div class="form-check d-flex align-items-center">
                    <input class="form-check-input" type="radio" name="TypeArticle" id="Tro">
                    <label class="form-check-label d-block flex-grow-1 pt-2 pb-2 ms-2" for="Tro">
                        Trọ
                    </label>
                </div>
                <hr class="mt-0 mb-0" />
                <div class="form-check d-flex align-items-center">
                    <input class="form-check-input" type="radio" name="TypeArticle" id="House">
                    <label class="form-check-label d-block flex-grow-1 pt-2 pb-2 ms-2" for="House">
                        Nhà
                    </label>
                </div>
                <hr class="mt-0 mb-0" />
                <div class="form-check d-flex align-items-center">
                    <input class="form-check-input" type="radio" name="TypeArticle" id="ChungCu">
                    <label class="form-check-label d-block flex-grow-1 pt-2 pb-2 ms-2" for="ChungCu">
                        Căn hộ/Chung Cư
                    </label>
                </div>
                <hr class="mt-0 mb-0" />
                <div class="form-check d-flex align-items-center">
                    <input class="form-check-input" type="radio" name="TypeArticle" id="Office">
                    <label class="form-check-label d-block flex-grow-1 pt-2 pb-2 ms-2" for="Office">
                        Văn Phòng
                    </label>
                </div>
            </div>
            <div class="row">
                <div class="accordion" >
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                Địa chỉ
                            </button>
                        </h2>
                    </div>
                </div>
                <p class="mt-3">Tỉnh/Thành phố</p>
                <select class="form-select mt-2 select_city">
                    <option value="-1">Tất cả</option>
                    @foreach(var item in citys)
                    {
                        <option value="@item.CityId">@item.CityName</option>
                    }
                </select>

                <p class="mt-3">Quận - Huyện</p>
                <select class="form-select mt-1 select_district">
                </select>
            </div>
            <div class="row mt-3">
                <div class="accordion" >
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                Giá - vnđ
                            </button>
                        </h2>
                    </div>
                </div>
                <div class="mt-3">
                    <input type="number" min="0.0" step="0.01" class="form-control" placeholder="Min" id="min" />
                    @* <span class="input-group-text">-></span> *@
                    <input type="number" min="0.0" step="0.01" class="form-control mt-2" placeholder="Max" id="max"  />
                </div>
                <div class="btn-group mt-2">
                    <button id="unfilter_price" class="ms-auto btn btn-outline-primary">Bỏ lọc</button>
                    <button id="filter_price" class="ms-auto btn btn-outline-primary">Lọc</button>
                </div>
            </div>
        </div>

        <div class="col-10 list-article">
            @* @{ *@
            @*     var articleLength = Model.Count(); *@
            @* } *@
            @* @for (int i = articleLength - 1; i >= 0; i--) *@
            @* { *@
            @*     <a asp-controller="Article" asp-action="Details" asp-route-id="@Model[i].ArticleId" class="text-dark nav-link"> *@
            @*         <div class="card mb-3 d-flex" style="min-width: 863px;"> *@
            @*             <div class="row"> *@
            @*                 <div class="col d-flex"> *@
            @*                     <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSq8aVvwt226C1Kx4QqQzL5IibUHcRbb1XCtw&s" class="img-fluid rounded-start" alt="..."> *@
            @*                     <div class="card-body"> *@
            @*                         <h5 class="card-title">@Model[i].Title</h5> *@
            @*                         <p class="card-text">@Model[i].DescAr</p> *@
            @*                         <p class="card-text"><small class="text-body-secondary">@Model[i].Price</small></p> *@
            @*                         <p class="card-text"><small class="text-body-secondary">@Model[i].CreateAt vnđ</small></p> *@
            @*                     </div> *@
            @*                 </div> *@
            @*             </div> *@
            @*         </div> *@
            @*     </a> *@
            @* } *@
        </div>
    </div>
</div>

<script>
     const selectCityElement = document.querySelector('.select_city');
     const selectDistrict = document.querySelector(".select_district");

     let districts = @Html.Raw(JsonSerializer.Serialize(districts));

    let typeFilter;
    let districtFilter;
    let cityFiler;
    let min = null;
    let max = null;

    function selectCity() {
            const value = selectCityElement.value;
            let html = `<option value="-1" selected>Tất cả</option>`;;
            districts.forEach(district => {
                if(district.CityId == value) {
                    html += `<option value="${district.DistrictId}">${district.DistrictName}</option>`;
                }
            });
            document.querySelector('.select_district').innerHTML = html;
            districtFilter = selectDistrict.value;
        }

    selectCity();

    // handler filters;
    const inputTypeArticles = document.querySelectorAll("input[name='TypeArticle']");
    
    const minPrice = document.querySelector('#min');
    const maxPrice = document.querySelector('#max');
    const btnFilterPrice = document.querySelector('#filter_price');
    const btnUnFilterPrice = document.querySelector('#unfilter_price');

    cityFiler = selectCityElement.value;
    districtFilter = selectDistrict.value;

    function handerFilter(filters) {
        var apiUrl = `@Url.Content("~/")Article/Filters?`;

        for (const key in filters) {
            if (filters[key]) {
                apiUrl += `${key}=${encodeURIComponent(filters[key])}&`;
            }
        }
        apiUrl = apiUrl.replace(/&$/, "");

        fetch(apiUrl)
            .then((response) => {
                return response.json();
            })
            .then(articles => {
                const listArticle = document.querySelector('.list-article');
                let html = '';
                articles = articles.reverse();
                articles.forEach(article => {
                    // <img src="${article.imagesArticles[0].imageArticle}" class="img-fluid rounded-start" alt="...">
                    // console.log(article)
                    html += `
                        <a href="/Article/Details/${article.articleId}" class="text-dark nav-link">
                            <div class="card mb-3 d-flex" style="min-width: 863px;">
                                <div class="row">
                                    <div class="col d-flex">
                                        <img src="${article.imagesArticles[0].imageArticle}" class="img-fluid rounded-start" alt="...">
                                        <div class="card-body">
                                            <h5 class="card-title">${article.title}</h5>
                                            <p class="card-text">${article.descAr}</p>
                                            <p class="card-text"><small class="text-body-secondary">${article.price} vnđ</small></p>
                                            <p class="card-text"><small class="text-body-secondary">${article.createAt}</small></p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    `
                })

                listArticle.innerHTML = html;
            });
    }

    selectCityElement.onchange = () => {
        cityFiler = selectCityElement.value;
        selectCity();
        handerFilter({ type: typeFilter, city: cityFiler, district: districtFilter, min: min, max: max });
    }

    selectDistrict.onchange = () => {
        districtFilter = selectDistrict.value;
        handerFilter({ type: typeFilter, city: cityFiler, district: districtFilter, min: min, max: max });
    }

    btnFilterPrice.onclick = () => {
        min = minPrice.value;
        max = maxPrice.value;
        handerFilter({ type: typeFilter, city: cityFiler, district: districtFilter, min: min, max: max });
    }

    btnUnFilterPrice.onclick = () => {
        min = null;
        max = null;
        handerFilter({ type: typeFilter, city: cityFiler, district: districtFilter, min: min, max: max });
    }

    inputTypeArticles.forEach(item => {

        if(item.checked) {
            typeFilter = item.id;
        }

        item.onchange = () => {
            if(item.checked) {
                typeFilter = item.id;
                handerFilter({ type: typeFilter, city: cityFiler, district: districtFilter, min: min, max: max });
            }
        }
    });

    handerFilter({ type: typeFilter, city: cityFiler, district: districtFilter, min: min, max: max });

</script>
